{"ast":null,"code":"var _jsxFileName = \"/Users/jacksondonovan/Tutorials/Front/Reactjs/greed-game/src/components/DiceCollection.js\";\nimport React, { useState } from 'react';\nimport face_one from '../images/die-face-one.png';\nimport face_two from '../images/die-face-two.png';\nimport face_three from '../images/die-face-three.png';\nimport face_four from '../images/die-face-four.png';\nimport face_five from '../images/die-face-five.png';\nimport face_six from '../images/die-face-six.png';\n\nfunction DiceCollection({\n  startGame\n}) {\n  let [firstDie, setFirstDie] = useState(face_one);\n  let [secondDie, setSecondDie] = useState(face_two);\n  let [thirdDie, setThirdDie] = useState(face_three);\n  let [fourthDie, setFourthDie] = useState(face_four);\n  let [fifthDie, setFifthDie] = useState(face_five);\n  let [sixthDie, setSixthDie] = useState(face_six);\n  let [rollScore, setRollScore] = useState(0);\n  let [isTurnActive, setIsActive] = useState(false);\n\n  function updateDie(roll, updateFunction) {\n    if (roll == 1) {\n      updateFunction(face_one);\n    } else if (roll == 2) {\n      updateFunction(face_two);\n    } else if (roll == 3) {\n      updateFunction(face_three);\n    } else if (roll == 4) {\n      updateFunction(face_four);\n    } else if (roll == 5) {\n      updateFunction(face_five);\n    } else if (roll == 6) {\n      updateFunction(face_six);\n    }\n  }\n\n  function evaluateRoll(rolls) {\n    let current_score = 0;\n    let score_map = {};\n\n    for (let i = 0; i < rolls.length; i++) {\n      if (score_map[rolls[i]]) {\n        score_map[rolls[i]]++;\n      } else {\n        score_map[rolls[i]] = 1;\n      }\n    }\n\n    let pips = Object.keys(score_map);\n    let frequencies = Object.values(score_map);\n\n    if (frequencies == [2, 2, 2].toString() || frequencies == [1, 1, 1, 1, 1, 1].toString()) {\n      current_score += 1500;\n    } else {}\n\n    for (let i = 0; i < frequencies.length; i++) {\n      if (frequencies[i] == 3) {\n        current_score += Number(pips[i]) * 100;\n      }\n\n      if (frequencies[i] == 4) {\n        current_score += 1000;\n      }\n\n      if (frequencies[i] == 5) {\n        current_score += 2000;\n      }\n\n      if (frequencies[i] == 6) {\n        current_score += 3000;\n      }\n    }\n\n    console.log(score_map);\n    return current_score;\n  }\n\n  function rollDice() {\n    setIsActive(true);\n    let rolls = [Math.floor(Math.random() * 6) + 1, Math.floor(Math.random() * 6) + 1, Math.floor(Math.random() * 6) + 1, Math.floor(Math.random() * 6) + 1, Math.floor(Math.random() * 6) + 1, Math.floor(Math.random() * 6) + 1];\n    updateDie(rolls[0], setFirstDie);\n    updateDie(rolls[1], setSecondDie);\n    updateDie(rolls[2], setThirdDie);\n    updateDie(rolls[3], setFourthDie);\n    updateDie(rolls[4], setFifthDie);\n    updateDie(rolls[5], setSixthDie);\n    setRollScore(evaluateRoll(rolls));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DiceCollection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }\n  }, isTurnActive ? /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, \" This roll: \", rollScore, \" \") : /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 65\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      height: 40\n    },\n    src: firstDie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      height: 40\n    },\n    src: secondDie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      height: 40\n    },\n    src: thirdDie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      height: 40\n    },\n    src: fourthDie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      height: 40\n    },\n    src: fifthDie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      height: 40\n    },\n    src: sixthDie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: rollDice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }\n  }, \"Roll Dice\"));\n}\n\nexport default DiceCollection;","map":{"version":3,"sources":["/Users/jacksondonovan/Tutorials/Front/Reactjs/greed-game/src/components/DiceCollection.js"],"names":["React","useState","face_one","face_two","face_three","face_four","face_five","face_six","DiceCollection","startGame","firstDie","setFirstDie","secondDie","setSecondDie","thirdDie","setThirdDie","fourthDie","setFourthDie","fifthDie","setFifthDie","sixthDie","setSixthDie","rollScore","setRollScore","isTurnActive","setIsActive","updateDie","roll","updateFunction","evaluateRoll","rolls","current_score","score_map","i","length","pips","Object","keys","frequencies","values","toString","Number","console","log","rollDice","Math","floor","random","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,SAASC,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAuC;AACtC,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAACC,QAAD,CAAtC;AACA,MAAI,CAACU,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAACE,QAAD,CAAxC;AACA,MAAI,CAACW,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAACG,UAAD,CAAtC;AACA,MAAI,CAACY,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAACI,SAAD,CAAxC;AACA,MAAI,CAACa,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAACK,SAAD,CAAtC;AACA,MAAI,CAACc,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAACM,QAAD,CAAtC;AACA,MAAI,CAACe,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,CAAD,CAAxC;AACA,MAAI,CAACuB,YAAD,EAAeC,WAAf,IAA8BxB,QAAQ,CAAC,KAAD,CAA1C;;AAEA,WAASyB,SAAT,CAAmBC,IAAnB,EAAyBC,cAAzB,EAAyC;AACxC,QAAGD,IAAI,IAAI,CAAX,EAAc;AACbC,MAAAA,cAAc,CAAC1B,QAAD,CAAd;AACA,KAFD,MAGK,IAAGyB,IAAI,IAAI,CAAX,EAAc;AAClBC,MAAAA,cAAc,CAACzB,QAAD,CAAd;AACA,KAFI,MAGA,IAAGwB,IAAI,IAAI,CAAX,EAAc;AAClBC,MAAAA,cAAc,CAACxB,UAAD,CAAd;AACA,KAFI,MAGA,IAAGuB,IAAI,IAAI,CAAX,EAAc;AAClBC,MAAAA,cAAc,CAACvB,SAAD,CAAd;AACA,KAFI,MAGA,IAAGsB,IAAI,IAAI,CAAX,EAAc;AAClBC,MAAAA,cAAc,CAACtB,SAAD,CAAd;AACA,KAFI,MAGA,IAAGqB,IAAI,IAAI,CAAX,EAAc;AAClBC,MAAAA,cAAc,CAACrB,QAAD,CAAd;AACA;AAED;;AAED,WAASsB,YAAT,CAAsBC,KAAtB,EAA6B;AAC5B,QAAIC,aAAa,GAAG,CAApB;AACA,QAAIC,SAAS,GAAG,EAAhB;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,KAAK,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACrC,UAAGD,SAAS,CAACF,KAAK,CAACG,CAAD,CAAN,CAAZ,EAAwB;AACvBD,QAAAA,SAAS,CAACF,KAAK,CAACG,CAAD,CAAN,CAAT;AACA,OAFD,MAGK;AACJD,QAAAA,SAAS,CAACF,KAAK,CAACG,CAAD,CAAN,CAAT,GAAsB,CAAtB;AACA;AACD;;AAED,QAAIE,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYL,SAAZ,CAAX;AACA,QAAIM,WAAW,GAAGF,MAAM,CAACG,MAAP,CAAcP,SAAd,CAAlB;;AAEA,QAAGM,WAAW,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUE,QAAV,EAAf,IAAuCF,WAAW,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmBE,QAAnB,EAAzD,EAAwF;AACvFT,MAAAA,aAAa,IAAI,IAAjB;AACA,KAFD,MAGK,CAEJ;;AAED,SAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGK,WAAW,CAACJ,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC3C,UAAGK,WAAW,CAACL,CAAD,CAAX,IAAkB,CAArB,EAAwB;AACvBF,QAAAA,aAAa,IAAKU,MAAM,CAACN,IAAI,CAACF,CAAD,CAAL,CAAN,GAAkB,GAApC;AACA;;AACD,UAAGK,WAAW,CAACL,CAAD,CAAX,IAAkB,CAArB,EAAwB;AACvBF,QAAAA,aAAa,IAAI,IAAjB;AACA;;AACD,UAAGO,WAAW,CAACL,CAAD,CAAX,IAAkB,CAArB,EAAwB;AACvBF,QAAAA,aAAa,IAAI,IAAjB;AACA;;AACD,UAAGO,WAAW,CAACL,CAAD,CAAX,IAAkB,CAArB,EAAwB;AACvBF,QAAAA,aAAa,IAAI,IAAjB;AACA;AACD;;AAEDW,IAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AACA,WAAOD,aAAP;AACA;;AAED,WAASa,QAAT,GAAoB;AACnBnB,IAAAA,WAAW,CAAC,IAAD,CAAX;AAEA,QAAIK,KAAK,GAAG,CACXe,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CADrB,EAEXF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CAFrB,EAGXF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CAHrB,EAIXF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CAJrB,EAKXF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CALrB,EAMXF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CANrB,CAAZ;AASArB,IAAAA,SAAS,CAACI,KAAK,CAAC,CAAD,CAAN,EAAWnB,WAAX,CAAT;AACAe,IAAAA,SAAS,CAACI,KAAK,CAAC,CAAD,CAAN,EAAWjB,YAAX,CAAT;AACAa,IAAAA,SAAS,CAACI,KAAK,CAAC,CAAD,CAAN,EAAWf,WAAX,CAAT;AACAW,IAAAA,SAAS,CAACI,KAAK,CAAC,CAAD,CAAN,EAAWb,YAAX,CAAT;AACAS,IAAAA,SAAS,CAACI,KAAK,CAAC,CAAD,CAAN,EAAWX,WAAX,CAAT;AACAO,IAAAA,SAAS,CAACI,KAAK,CAAC,CAAD,CAAN,EAAWT,WAAX,CAAT;AAEAE,IAAAA,YAAY,CAACM,YAAY,CAACC,KAAD,CAAb,CAAZ;AACA;;AAED,sBACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,YAAY,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAqBF,SAArB,MAAH,gBAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD9D,eAEC;AAAK,IAAA,KAAK,EAAE;AAAE0B,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAA4B,IAAA,GAAG,EAAGtC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,eAGC;AAAK,IAAA,KAAK,EAAE;AAAEsC,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAA4B,IAAA,GAAG,EAAGpC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,eAIC;AAAK,IAAA,KAAK,EAAE;AAAEoC,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAA4B,IAAA,GAAG,EAAGlC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,eAKC;AAAK,IAAA,KAAK,EAAE;AAAEkC,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAA4B,IAAA,GAAG,EAAGhC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,eAMC;AAAK,IAAA,KAAK,EAAE;AAAEgC,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAA4B,IAAA,GAAG,EAAG9B,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,eAOC;AAAK,IAAA,KAAK,EAAE;AAAE8B,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAA4B,IAAA,GAAG,EAAG5B,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,eASC;AAAQ,IAAA,OAAO,EAAEwB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATD,CADD;AAaA;;AAED,eAAepC,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport face_one from '../images/die-face-one.png';\nimport face_two from '../images/die-face-two.png';\nimport face_three from '../images/die-face-three.png';\nimport face_four from '../images/die-face-four.png';\nimport face_five from '../images/die-face-five.png';\nimport face_six from '../images/die-face-six.png';\n\nfunction DiceCollection({ startGame }) {\n\tlet [firstDie, setFirstDie] = useState(face_one)\n\tlet [secondDie, setSecondDie] = useState(face_two)\n\tlet [thirdDie, setThirdDie] = useState(face_three)\n\tlet [fourthDie, setFourthDie] = useState(face_four)\n\tlet [fifthDie, setFifthDie] = useState(face_five)\n\tlet [sixthDie, setSixthDie] = useState(face_six)\n\tlet [rollScore, setRollScore] = useState(0)\n\tlet [isTurnActive, setIsActive] = useState(false)\n\n\tfunction updateDie(roll, updateFunction) {\n\t\tif(roll == 1) {\n\t\t\tupdateFunction(face_one)\n\t\t}\n\t\telse if(roll == 2) {\n\t\t\tupdateFunction(face_two)\n\t\t}\n\t\telse if(roll == 3) {\n\t\t\tupdateFunction(face_three)\n\t\t}\n\t\telse if(roll == 4) {\n\t\t\tupdateFunction(face_four)\n\t\t}\n\t\telse if(roll == 5) {\n\t\t\tupdateFunction(face_five)\n\t\t}\n\t\telse if(roll == 6) {\n\t\t\tupdateFunction(face_six)\n\t\t}\n\n\t}\n\n\tfunction evaluateRoll(rolls) {\n\t\tlet current_score = 0\n\t\tlet score_map = {}\n\n\t\tfor(let i = 0; i < rolls.length; i++) {\n\t\t\tif(score_map[rolls[i]]) {\n\t\t\t\tscore_map[rolls[i]]++\n\t\t\t}\n\t\t\telse {\n\t\t\t\tscore_map[rolls[i]] = 1\n\t\t\t}\n\t\t}\n\n\t\tlet pips = Object.keys(score_map)\n\t\tlet frequencies = Object.values(score_map)\n\n\t\tif(frequencies == [2, 2, 2].toString() || frequencies == [1, 1, 1, 1, 1, 1].toString()) {\n\t\t\tcurrent_score += 1500\n\t\t}\n\t\telse {\n\n\t\t}\n\n\t\tfor(let i = 0; i < frequencies.length; i++) {\n\t\t\tif(frequencies[i] == 3) {\n\t\t\t\tcurrent_score += (Number(pips[i]) * 100)\n\t\t\t}\n\t\t\tif(frequencies[i] == 4) {\n\t\t\t\tcurrent_score += 1000\n\t\t\t}\n\t\t\tif(frequencies[i] == 5) {\n\t\t\t\tcurrent_score += 2000\n\t\t\t}\n\t\t\tif(frequencies[i] == 6) {\n\t\t\t\tcurrent_score += 3000\n\t\t\t}\n\t\t}\n\n\t\tconsole.log(score_map)\n\t\treturn current_score\n\t}\n\n\tfunction rollDice() {\n\t\tsetIsActive(true)\n\n\t\tlet rolls = [\n\t\t\tMath.floor(Math.random() * 6) + 1,\n\t\t\tMath.floor(Math.random() * 6) + 1,\n\t\t\tMath.floor(Math.random() * 6) + 1,\n\t\t\tMath.floor(Math.random() * 6) + 1,\n\t\t\tMath.floor(Math.random() * 6) + 1,\n\t\t\tMath.floor(Math.random() * 6) + 1\n\t\t]\n\n\t\tupdateDie(rolls[0], setFirstDie)\n\t\tupdateDie(rolls[1], setSecondDie)\n\t\tupdateDie(rolls[2], setThirdDie)\n\t\tupdateDie(rolls[3], setFourthDie)\n\t\tupdateDie(rolls[4], setFifthDie)\n\t\tupdateDie(rolls[5], setSixthDie)\n\n\t\tsetRollScore(evaluateRoll(rolls))\n\t}\n\n\treturn (\n\t\t<div className=\"DiceCollection\">\n\t\t\t{ isTurnActive ? <label> This roll: { rollScore } </label> : <br /> }\n\t\t\t<img style={{ height: 40 }} src={ firstDie } />\n\t\t\t<img style={{ height: 40 }} src={ secondDie } />\n\t\t\t<img style={{ height: 40 }} src={ thirdDie } />\n\t\t\t<img style={{ height: 40 }} src={ fourthDie } />\n\t\t\t<img style={{ height: 40 }} src={ fifthDie } />\n\t\t\t<img style={{ height: 40 }} src={ sixthDie } />\n\n\t\t\t<button onClick={rollDice}>Roll Dice</button>\n\t\t</div>\n  );\n}\n\nexport default DiceCollection;\n"]},"metadata":{},"sourceType":"module"}